---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Chart.Name }}-config
data:
  App.toml: |
    id = {{ pluck .Values.werf.env .Values.app.id | first | default .Values.app.id._default | quote }}
    broker_id = {{ pluck .Values.werf.env .Values.app.broker_id | first | default .Values.app.broker_id._default | quote }}
    retry_delay = {{ pluck .Values.werf.env .Values.app.retry_delay | first | default .Values.app.retry_delay._default | quote }}
    
    default_frontend_base = {{ pluck .Values.werf.env .Values.app.default_frontend_base | first | default .Values.app.default_frontend_base._default | quote }}
{{- range $tenant := .Values.app.tenants }}
{{- if (pluck $.Values.werf.env $tenant.authz.ident | first) }}
    
    tenants = [{{ pluck $.Values.werf.env $tenant.authz.ident | first | default $tenant.authz.ident._default | quote }}]
{{- end }}
{{- end }}
    
    [id_token]
    algorithm = {{ pluck .Values.werf.env .Values.app.id_token.algorithm | first | default .Values.app.id_token.algorithm._default | quote }}
    key = {{ printf "/app/%s" (pluck .Values.werf.env .Values.app.id_token.key | first | default .Values.app.id_token.key._default) | quote }}

    [conference_client]
    account_id = {{ pluck .Values.werf.env .Values.app.conference.id | first | default .Values.app.conference.id._default | quote }}
    timeout = {{ pluck .Values.werf.env .Values.app.conference.timeout | first | default .Values.app.conference.timeout._default | quote }}
    api_version = {{ pluck .Values.werf.env .Values.app.conference.api_version | first | default .Values.app.conference.api_version._default | quote }}

    [event_client]
    account_id = {{ pluck .Values.werf.env .Values.app.event.id | first | default .Values.app.event.id._default | quote }}
    timeout = {{ pluck .Values.werf.env .Values.app.event.timeout | first | default .Values.app.event.timeout._default | quote }}
    api_version = {{ pluck .Values.werf.env .Values.app.event.api_version | first | default .Values.app.event.api_version._default | quote }}

    [tq_client]
    base_url = {{ pluck .Values.werf.env .Values.app.tq.base_url | first | default .Values.app.tq.base_url._default | quote }}
    account_id = {{ pluck .Values.werf.env .Values.app.tq.id | first | default .Values.app.tq.id._default | quote }}
    timeout = {{ pluck .Values.werf.env .Values.app.tq.timeout | first | default .Values.app.tq.timeout._default | quote }}
    api_version = {{ pluck .Values.werf.env .Values.app.tq.api_version | first | default .Values.app.tq.api_version._default | quote }}

    [mqtt]
    uri = {{ pluck .Values.werf.env .Values.app.mqtt.uri | first | default .Values.app.mqtt.uri._default | quote }}
    clean_session = {{ pluck .Values.werf.env .Values.app.mqtt.clean_session | first | default .Values.app.mqtt.clean_session._default }}
    reconnect_interval = {{ pluck .Values.werf.env .Values.app.mqtt.reconnect_interval | first | default .Values.app.mqtt.reconnect_interval._default | quote }}
    keep_alive = {{ pluck .Values.werf.env .Values.app.mqtt.keep_alive | first | default .Values.app.mqtt.keep_alive._default | quote }}
    incoming_message_queue_size = {{ pluck .Values.werf.env .Values.app.mqtt.incoming_message_queue_size | first | default .Values.app.mqtt.incoming_message_queue_size._default | quote }}
    outgoing_message_queue_size = {{ pluck .Values.werf.env .Values.app.mqtt.outgoing_message_queue_size | first | default .Values.app.mqtt.outgoing_message_queue_size._default | quote }}
    max_message_size = {{ pluck .Values.werf.env .Values.app.mqtt.max_message_size | first | default .Values.app.mqtt.max_message_size._default | quote }}

    [http]
    listener_address = {{ pluck .Values.werf.env .Values.app.http.listener_address | first | default .Values.app.http.listener_address._default | quote }}
    metrics_listener_address = {{ pluck .Values.werf.env .Values.app.http.metrics_listener_address | first | default .Values.app.http.metrics_listener_address._default | quote }}

{{- range $authn := .Values.app.authn }}
    
    [authn.{{ pluck $.Values.werf.env $authn.ident | first | default $authn.ident._default | quote }}]
    audience = [
    {{- range $k, $v := (pluck $.Values.werf.env $authn.audience | first | default $authn.audience._default) }}
    {{- if $k }}, {{ end }}
    {{- $v | quote -}}
    {{- end -}}
    ]
    algorithm = {{ pluck $.Values.werf.env $authn.algorithm | first | default $authn.algorithm._default | quote }}
    key = {{ printf "/app/%s" (pluck $.Values.werf.env $authn.key | first | default $authn.key._default) | quote }}
{{- end }}
    
    [authz.{{ pluck .Values.werf.env .Values.app.authz.ident | first | default .Values.app.authz.ident._default | quote }}]
    type = {{ pluck .Values.werf.env .Values.app.authz.type | first | default .Values.app.authz.type._default | quote }}
    [[authz.{{ printf "%s.records" (pluck .Values.werf.env .Values.app.authz.ident | first | default .Values.app.authz.ident._default | quote) }}]]
    subject_account_id = {{ printf "devops.%s" ( pluck .Values.werf.env .Values.app.authz.ident | first | default .Values.app.authz.ident._default ) | quote }}
    object = [{{ pluck .Values.werf.env .Values.app.authz.object | first | default .Values.app.authz.object._default | quote }}]
    action = {{ pluck .Values.werf.env .Values.app.authz.action | first | default .Values.app.authz.action._default | quote }}
{{- range $tenant := .Values.app.tenants }}
{{- if (pluck $.Values.werf.env $tenant.authz.ident | first) }}
    
    ##
    ## {{ $tenant.name }}
    ##
    [authz.{{ pluck $.Values.werf.env $tenant.authz.ident | first | default $tenant.authz.ident._default | quote }}]
    type = {{ pluck $.Values.werf.env $tenant.authz.type | first | default $tenant.authz.type._default | quote }}
    uri = {{ pluck $.Values.werf.env $tenant.authz.uri | first | default $tenant.authz.uri._default | quote }}
    algorithm = {{ pluck $.Values.werf.env $tenant.authz.algorithm | first | default $tenant.authz.algorithm._default | quote }}
    key = {{ printf "/app/%s" (pluck $.Values.werf.env $tenant.authz.key | first | default $tenant.authz.key._default) | quote }}
    user_agent = {{ pluck $.Values.werf.env $tenant.authz.user_agent | first | default $tenant.authz.user_agent._default | quote }}
    max_retries = {{ pluck $.Values.werf.env $tenant.authz.max_retries | first | default $tenant.authz.max_retries._default }}
{{- end }}
{{- end }}
    
    [storage]
    base_url = {{ pluck .Values.werf.env .Values.app.storage.base_url | first | default .Values.app.storage.base_url._default | quote }}
