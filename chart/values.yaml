# Default values for dispatcher.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

container:
  image:
    repository: foxford/dispatcher
    tag: ""

  resources:
    limits:
      cpu: 0.5
      memory: 500Mi
    requests:
      cpu: 0.1
      memory: 50Mi

turn_hosts:
  - turn01.example.org:1234
  - turn02.example.org:5678

sentry:
  dsn: "https://dsn.sentry.example.org/"

svc:
  audience: svc.services
  credentials:
    # svc-secret:
    #   - subPath: private-key
    #     mountPath: /path/to/svc/private/key
    #   - subPath: public-key
    #     mountPath: /path/to/svc/public/key
  authz:
    type: localwhitelist
    records:
      - subject_account_id: "devops.foo.bar"
        object: ["scopes"]
        action: "rollback"
  authn:
    key: /path/to/key
  tq_url: "https://example.org/webinar/tq"
  storage_url: "https://example.org/webinar/storage"

audiences:
  - audience: foo.bar
    credentials:
      foobar-der-credentials:
        - subPath: foobar-public-key
          mountPath: /path/to/foobar/public/key
    authn:
      key: path/to/public_key.p8.der
    authz:
      type: http
      url: "https://authz.example.org/api/v1/authz"
    tq:
      preroll_offset: 4181
    mqtt_events: true

env:
  RUST_LOG: warn,dispatcher=info,svc_utils=info,svc_utils::metrics=warn
  DATABASE_POOL_SIZE: 15
  DATABASE_POOL_IDLE_SIZE: 15
  DATABASE_POOL_TIMEOUT: 5
  DATABASE_POOL_MAX_LIFETIME: 43200

service:
  type: ClusterIP
  ports:
    http: 8080
    metrics: 8081

ingress:
  host: example.org
  tls:
    secretName: tls-certificates
